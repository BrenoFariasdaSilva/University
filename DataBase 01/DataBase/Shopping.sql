use shopping;

SET foreign_key_checks = 0;

DROP TABLE IF EXISTS HORARIOS;
DROP TABLE IF EXISTS SHOPPING;
DROP TABLE IF EXISTS FUNCIONARIOS;
DROP TABLE IF EXISTS SHOPPING_FUNCIONARIOS;
DROP TABLE IF EXISTS ESTABELECIMENTOS;
DROP TABLE IF EXISTS LOJAS;
DROP TABLE IF EXISTS PRODUTOS;
DROP TABLE IF EXISTS PRODUTOS_LOJAS;
DROP TABLE IF EXISTS FUNCIONARIOS_TRABALHAM_LOJAS;
DROP TABLE IF EXISTS CARDAPIOS;
DROP TABLE IF EXISTS RESTAURANTES;
DROP TABLE IF EXISTS FUNCIONARIOS_TRABALHAM_RESTAURANTES;
DROP TABLE IF EXISTS VAGAS;
DROP TABLE IF EXISTS CLIENTES;
DROP TABLE IF EXISTS CLIENTES_VAGAS;
DROP TABLE IF EXISTS SHOPPING_CLIENTES;
DROP TABLE IF EXISTS RESTAURANTE_CLIENTES;
DROP TABLE IF EXISTS LOJAS_CLIENTES;
DROP TABLE IF EXISTS ESTACIONAMENTOS;

SET foreign_key_checks = 1;

CREATE TABLE HORARIOS (
	idHorarios  INTEGER NOT NULL,
    horaEntrada TIME NOT NULL,
    horaSaida   TIME NOT NULL,
    diaSemana  VARCHAR(100) NOT NULL,
    PRIMARY KEY (idHorarios) 
);

CREATE TABLE SHOPPING (
    NIRE        INTEGER NOT NULL,
    horario     INTEGER NOT NULL,
    nome        VARCHAR(100) NOT NULL,
    endereco    VARCHAR(100) NOT NULL,
    FOREIGN KEY (horario) REFERENCES HORARIOS(idHorarios) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY (NIRE, horario)
);

CREATE TABLE FUNCIONARIOS (
    CPF         CHAR(11) NOT NULL,
    cargo       VARCHAR(100) NOT NULL,
    andar       INTEGER NOT NULL,
    nome        VARCHAR(100) NOT NULL,
    PRIMARY KEY (CPF)
);

CREATE TABLE SHOPPING_FUNCIONARIOS (
    shopping    INTEGER NOT NULL,
    funcionario CHAR(11) NOT NULL,
    salario     FLOAT NOT NULL,
    FOREIGN KEY (shopping) REFERENCES SHOPPING(NIRE),
    FOREIGN KEY (funcionario) REFERENCES FUNCIONARIOS(CPF),
    PRIMARY KEY (funcionario)
);

CREATE TABLE ESTABELECIMENTOS (
    numeroDoBox INTEGER NOT NULL,
	shopping    INTEGER NOT NULL,
    andar       INTEGER NOT NULL,
    nome        VARCHAR(100) NOT NULL,
    FOREIGN KEY (shopping) REFERENCES SHOPPING(NIRE) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY (numeroDoBox, shopping)
);

CREATE TABLE LOJAS (
    numeroDoBox INTEGER NOT NULL,
    nome        VARCHAR(100) NOT NULL,
    andar       INTEGER NOT NULL, 
    faturamento FLOAT NOT NULL,
    FOREIGN KEY (numeroDoBox) REFERENCES ESTABELECIMENTOS(numeroDoBox) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY (numeroDoBox, nome)           
);

CREATE TABLE PRODUTOS (
    codigoProduto  INTEGER NOT NULL,
    nome        VARCHAR(100) NOT NULL,
    modelo      VARCHAR(100) NOT NULL,
    marca       VARCHAR(100) NOT NULL,
    PRIMARY KEY (codigoProduto)
);

CREATE TABLE PRODUTOS_LOJAS (
    loja        INTEGER NOT NULL,
    produto     INTEGER NOT NULL,
    estoque     INTEGER NOT NULL,
    FOREIGN KEY (loja) REFERENCES LOJAS(numeroDoBox),
    FOREIGN KEY (produto) REFERENCES PRODUTOS(codigoProduto),
    PRIMARY KEY (loja, produto)    
);

CREATE TABLE FUNCIONARIOS_TRABALHAM_LOJAS (
    loja        INTEGER NOT NULL,
    funcionario CHAR(11) NOT NULL,
    salario     FLOAT NOT NULL,
    FOREIGN KEY (loja) REFERENCES LOJAS(numeroDoBox),
    FOREIGN KEY (funcionario) REFERENCES FUNCIONARIOS(CPF),
    PRIMARY KEY (loja, funcionario)
);

CREATE TABLE CARDAPIOS (
    codigoCardapio INTEGER NOT NULL,
    custo       FLOAT NOT NULL,
    nome        VARCHAR(100) NOT NULL,
    PRIMARY KEY (codigoCardapio)
);

CREATE TABLE RESTAURANTES (
    numeroDoBox INTEGER NOT NULL,
    codigoCardapio INTEGER NOT NULL,
    nome        VARCHAR(100) NOT NULL,
    andar       INTEGER NOT NULL,
    faturamento FLOAT NOT NULL,
    FOREIGN KEY (numeroDoBox) REFERENCES ESTABELECIMENTOS(numeroDoBox) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (codigoCardapio) REFERENCES CARDAPIOS(codigoCardapio) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY (numeroDoBox, codigoCardapio)
);

CREATE TABLE FUNCIONARIOS_TRABALHAM_RESTAURANTES (
    restaurante INTEGER NOT NULL,
    funcionario CHAR(11) NOT NULL,
    salario     FLOAT NOT NULL,
    FOREIGN KEY (restaurante) REFERENCES RESTAURANTES(numeroDoBox),
    FOREIGN KEY (funcionario) REFERENCES FUNCIONARIOS(CPF),
    PRIMARY KEY (restaurante, funcionario)
);

CREATE TABLE VAGAS (
    idVaga    INTEGER NOT NULL,
    lugar     VARCHAR(100) NOT NULL,
    andar     INTEGER NOT NULL,
    detalhes  VARCHAR(100) NOT NULL,
    PRIMARY KEY (idVaga)
);

CREATE TABLE CLIENTES (
    CPF         CHAR(11) NOT NULL,
    RG          VARCHAR(100) NOT NULL,
    idade       INTEGER NOT NULL,
    nome        VARCHAR(100) NOT NULL,
    numeroVaga  INTEGER,
    FOREIGN KEY (numeroVaga) REFERENCES VAGAS(idVaga) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY (CPF)
);

CREATE TABLE CLIENTES_VAGAS (
    cliente     CHAR(11) NOT NULL,
    vaga        INTEGER NOT NULL,
    status      VARCHAR(100) NOT NULL,  
    FOREIGN KEY (cliente) REFERENCES CLIENTES(CPF),
    FOREIGN KEY (vaga) REFERENCES VAGAS(idVaga),
    PRIMARY KEY (cliente, vaga)
);

CREATE TABLE SHOPPING_CLIENTES (
    shopping    INTEGER NOT NULL,
    cliente     CHAR(11) NOT NULL,
    FOREIGN KEY (shopping) REFERENCES SHOPPING(NIRE),
    FOREIGN KEY (cliente) REFERENCES CLIENTES(CPF),
    PRIMARY KEY (shopping, cliente)
);

CREATE TABLE RESTAURANTE_CLIENTES (
    restaurante INTEGER NOT NULL,
    cliente     CHAR(11) NOT NULL,
    FOREIGN KEY (restaurante) REFERENCES RESTAURANTES(numeroDoBox),
    FOREIGN KEY (cliente) REFERENCES CLIENTES(CPF),
    PRIMARY KEY (restaurante, cliente)
);

CREATE TABLE LOJAS_CLIENTES (
    loja        INTEGER NOT NULL,
    cliente     CHAR(11) NOT NULL,
    FOREIGN KEY (loja) REFERENCES LOJAS(numeroDoBox),
    FOREIGN KEY (cliente) REFERENCES CLIENTES(CPF),
    PRIMARY KEY (loja, cliente)
);

CREATE TABLE ESTACIONAMENTOS (
    edificio    INTEGER NOT NULL,
    tipo        VARCHAR(100) NOT NULL,
    custo       FLOAT NOT NULL,
    idVaga      INTEGER NOT NULL,
    FOREIGN KEY (idVaga) REFERENCES VAGAS(idVaga),
    PRIMARY KEY (edificio)
);